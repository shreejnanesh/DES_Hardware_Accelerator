
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-w>class</q-w> dram_cov #(<q-w>type</q-w> T=dram_seq_item) <q-w>extends</q-w> uvm_subscriber #(T);
<a name="2"><q-n>     2  </q-n></a>uvm_analysis_imp #(T,dram_cov) dram_item_collected_export;
<a name="3"><q-n>     3  </q-n></a>`uvm_component_utils(dram_cov)
<a name="4"><q-n>     4  </q-n></a><q-m>//dram_seq_item pkt;</q-m>
<a name="5"><q-n>     5  </q-n></a>T pkt;
<a name="6"><q-n>     6  </q-n></a>
<a name="7"><q-n>     7  </q-n></a>
<a name="8"><q-n>     8  </q-n></a><q-w>covergroup</q-w> CovPort;	<q-m>//@(posedge intf.clk);</q-m>
<a name="9"><q-n>     9  </q-n></a>  address : <q-w>coverpoint</q-w> pkt.add {
<a name="10"><q-n>     10  </q-n></a>    <q-w>bins</q-w> low    = {[0:20]};
<a name="11"><q-n>     11  </q-n></a>    <q-w>bins</q-w> med    = {[21:42]};
<a name="12"><q-n>     12  </q-n></a>    <q-w>bins</q-w> high   = {[43:63]};
<a name="13"><q-n>     13  </q-n></a>  }
<a name="14"><q-n>     14  </q-n></a>  data : <q-w>coverpoint</q-w>  pkt.data_in {
<a name="15"><q-n>     15  </q-n></a>    <q-w>bins</q-w> low    = {[0:2**20]};
<a name="16"><q-n>     16  </q-n></a>    <q-w>bins</q-w> med    = {[0:2**40]};
<a name="17"><q-n>     17  </q-n></a>    <q-w>bins</q-w> high   = {[(2**40)+1:2**64]};
<a name="18"><q-n>     18  </q-n></a>  }
<a name="19"><q-n>     19  </q-n></a><q-w>endgroup</q-w>
<a name="20"><q-n>     20  </q-n></a>
<a name="21"><q-n>     21  </q-n></a><q-w>function</q-w> <q-w>new</q-w> (<q-w>string</q-w> name = <q-l>"dram_cov"</q-l>, uvm_component parent);
<a name="22"><q-n>     22  </q-n></a>      <q-w>super</q-w>.<q-w>new</q-w> (name, parent);
<a name="23"><q-n>     23  </q-n></a>	  CovPort = <q-w>new</q-w>;
<a name="24"><q-n>     24  </q-n></a><q-w>endfunction</q-w>
<a name="25"><q-n>     25  </q-n></a>
<a name="26"><q-n>     26  </q-n></a><q-w>function</q-w> <q-w>void</q-w> build_phase(uvm_phase phase);
<a name="27"><q-n>     27  </q-n></a><q-m>//    super.build_phase(phase);</q-m>
<a name="28"><q-n>     28  </q-n></a>	dram_item_collected_export = <q-w>new</q-w>(<q-l>"dram_item_collected_export"</q-l>,<q-w>this</q-w>);
<a name="29"><q-n>     29  </q-n></a>	<q-m>//pkt=dram_seq_item::type_id::create("pkt");</q-m>
<a name="30"><q-n>     30  </q-n></a>    <q-m>//CovPort = new("CovPort",this);</q-m>
<a name="31"><q-n>     31  </q-n></a><q-w>endfunction</q-w>
<a name="32"><q-n>     32  </q-n></a>	  
<a name="33"><q-n>     33  </q-n></a><q-w>virtual</q-w> <q-w>function</q-w> <q-w>void</q-w> write (T t);
<a name="34"><q-n>     34  </q-n></a>	`uvm_info(<q-l>"SEQ"</q-l>,<q-l>"SEQUENCE TRANSACTIONS"</q-l>,UVM_NONE);
<a name="35"><q-n>     35  </q-n></a>	pkt = t;
<a name="36"><q-n>     36  </q-n></a>	CovPort.sample();
<a name="37"><q-n>     37  </q-n></a><q-w>endfunction</q-w>
<a name="38"><q-n>     38  </q-n></a>
<a name="39"><q-n>     39  </q-n></a><q-w>endclass</q-w></pre>
</tt>

  
</body>
</html>
